{"version":3,"file":"component---src-templates-tag-template-js-e3b0f90106b3f6f0e04c.js","mappings":"sMAIe,SAASA,EAASC,GAC/B,MACEC,MACEC,MACEC,aAAa,MACXC,EAAOC,KAAMC,GAEfC,QAAQ,KACNC,MAIJR,EACEK,EAAO,IAAII,KAAKH,GACtB,OACE,uBAAKI,UAAU,QACb,0BACE,gBAAC,EAAAC,KAAD,CAAMD,UAAU,gBAAgBE,GAAIJ,GAAOJ,IAE7C,2BACE,wBAAMM,UAAU,uCAAuCG,UAAUC,EAAAA,EAAAA,GAAOT,EAAM,kBAC3ES,EAAAA,EAAAA,GAAOT,EAAM,qB,0FCpBT,SAASU,EAAYf,GAClC,MACEgB,aAAa,IAAEC,GACfhB,MACEiB,mBAAmB,MAAEC,KAErBnB,EACJ,OACE,4BACE,0BACG,QACAiB,GAEFE,EAAMC,KAAIC,GAAQ,gBAAC,IAAD,CAAUpB,KAAMoB,EAAMC,IAAKD,EAAKnB,KAAKK,OAAOC","sources":["webpack://liberty-bear.github.io/./src/components/post-item/index.js","webpack://liberty-bear.github.io/./src/templates/tag-template.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function PostItem(props) {\r\n  const {\r\n    data: {\r\n      node: {\r\n        frontmatter: {\r\n          title, date: dateStr,\r\n        },\r\n        fields: {\r\n          slug,\r\n        },\r\n      },\r\n    },\r\n  } = props;\r\n  const date = new Date(dateStr);\r\n  return (\r\n    <div className=\"mb-8\">\r\n      <h2>\r\n        <Link className=\"text-gray-700\" to={slug}>{title}</Link>\r\n      </h2>\r\n      <div>\r\n        <time className=\"mr-2 text-sm text-gray-400 uppercase\" dateTime={format(date, 'MMMM d, yyyy')}>\r\n          {format(date, 'MMMM d, yyyy')}\r\n        </time>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { graphql } from 'gatsby';\r\nimport React from 'react';\r\n\r\nimport PostItem from '#/components/post-item';\r\n\r\nexport default function TagTemplate(props) {\r\n  const {\r\n    pageContext: { tag },\r\n    data: {\r\n      allMarkdownRemark: { edges },\r\n    },\r\n  } = props;\r\n  return (\r\n    <main>\r\n      <h1>\r\n        {'Tag: '}\r\n        {tag}\r\n      </h1>\r\n      {edges.map(edge => <PostItem data={edge} key={edge.node.fields.slug} />)}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query TagPage($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      filter: {\r\n        frontmatter: {\r\n          tags: { in: [$tag] }\r\n        }\r\n        fields: {\r\n          type: { eq: \"posts\" }\r\n          draft: { ne: true }\r\n        }\r\n      }\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            type\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["PostItem","props","data","node","frontmatter","title","date","dateStr","fields","slug","Date","className","Link","to","dateTime","format","TagTemplate","pageContext","tag","allMarkdownRemark","edges","map","edge","key"],"sourceRoot":""}